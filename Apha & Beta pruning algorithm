def alphabeta(state, depth, alpha, beta, maximizing):
    if terminal(state) or depth == 0:
        return evaluate(state)

    if maximizing:
        max_eval = -float('inf')
        for move in get_moves(state):
            new_state = apply_move(state, move, 'MAX')
            eval = alphabeta(new_state, depth-1, alpha, beta, False)
            max_eval = max(max_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                break
        return max_eval
    else:
        min_eval = float('inf')
        for move in get_moves(state):
            new_state = apply_move(state, move, 'MIN')
            eval = alphabeta(new_state, depth-1, alpha, beta, True)
            min_eval = min(min_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                break
        return min_eval
